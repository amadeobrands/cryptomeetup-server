<template>
  <div class="app-container calendar-list-container">
    <div class="filter-container">
      <el-button v-if="$!{table.name}_add" class="filter-item" style="margin-left: 10px;"
                 @click="handleCreate" type="primary" icon="el-icon-circle-plus">添加</el-button>
    </div>
    <el-table :key='tableKey' :data="list" v-loading="listLoading" element-loading-text="给我一点时间" border fit highlight-current-row
      style="width: 100%">
      #foreach($field in $table.fields)
      <el-table-column align="center" label="$!{field.comment}">
        <template slot-scope="scope">
          <span>{{ scope.row.$!{field.propertyName} }}</span>
        </template>
      </el-table-column>
      #end

      <el-table-column label="操作">
        <template slot-scope="scope">
          <el-button v-if="$!{table.name}_upd" size="small" type="success" @click="handleUpdate(scope.row)">编辑
          </el-button>
          <el-button v-if="$!{table.name}_del" size="mini" type="danger" @click="handleDelete(scope.row)">删除
          </el-button>
        </template>
      </el-table-column>
    </el-table>

    <div v-show="!listLoading" class="pagination-container">
      <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page.sync="listQuery.page"
        :page-sizes="[10,20,30, 50]" :page-size="listQuery.limit" layout="total, sizes, prev, pager, next, jumper" :total="total">
      </el-pagination>
    </div>

    <el-dialog :title="textMap[dialogStatus]" :visible.sync="dialogFormVisible">
        <shopEdit :formData="selectData" @onSuccess="handleShopEditSuccess"></shopEdit>
    </el-dialog>

  </div>
</template>

<script>
    import {
            $!{table.name}_api
    }
        from
                '@/api/shop'
    import waves from '@/directive/waves/index.js' // 水波纹指令
    import {mapGetters} from 'vuex'
    import shopEdit from './edit.vue.vm'

    export default {
    name: 'table_shop_$!{table.name}',
    directives: {
      waves
    },
    components: { shopEdit },
    data() {
      return {
        list: null,
        total: null,
        listLoading: true,
        listQuery: {
          page: 1,
          limit: 20
        },
        selectData: {},
        dialogFormVisible: false,
        dialogStatus: '',
        $!{table.name}_add: false,
        $!{table.name}_upd: false,
        $!{table.name}_del: false,
        textMap: {
          update: '编辑',
          create: '创建'
        },
        tableKey: 0
      }
    },
    computed: {
      ...mapGetters([
        'permissions'
      ])
    },
    filters: {
      statusFilter(status) {
        const statusMap = {
          0: '有效',
          1: '无效'
        }
        return statusMap[status]
      }
    },
    created() {
      this.getList()
      this.$!{table.name}_add = this.permissions['$!{table.name}_add']
      this.$!{table.name}_upd = this.permissions['$!{table.name}_upd']
      this.$!{table.name}_del = this.permissions['$!{table.name}_del']
    },
    methods: {
      getList() {
        this.listLoading = true
        $!{table.name}_api.page(this.listQuery).then(response => {
          this.list = response.data.records
          this.total = response.data.total
          this.listLoading = false
        })
      },
      handleSizeChange(val) {
        this.listQuery.limit = val
        this.getList()
      },
      handleCurrentChange(val) {
        this.listQuery.page = val
        this.getList()
      },
      handleDelete(row) {
        $!{table.name}_api.delObj(row.id).then(response => {
          this.dialogFormVisible = false
          this.getList()
          this.$message.success('删除成功')
        })
      },
      handleCreate() {
        this.selectData = {}
        this.dialogStatus = 'create'
        this.dialogFormVisible = true
      },
      handleUpdate(row) {
          this.selectData = row
          this.dialogStatus = 'create'
          this.dialogFormVisible = true
      },
      handleShopEditSuccess() {
        this.dialogFormVisible = false
      }
    }
  }
</script>